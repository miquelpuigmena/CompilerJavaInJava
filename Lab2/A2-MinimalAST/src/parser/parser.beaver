%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, INT, LEFTBRACKET, RIGHTBRACKET, LEFTPARENTHESIS, RIGHTPARENTHESIS;

%typeof program = "Program";
%typeof func_decl = "FuncDecl";
%typeof func_list = "List";
%typeof arg = "Arg";
%typeof block = "Block";


%goal program;
program = func_list.a {:  return new Program(a); :} ;

func_list =
  func_decl.a {: return new List().add(a); :}
  | func_list.a func_decl.b  {: return a.add(b); :}
  ;

func_decl = INT ID.id arg.a block.b {: return new FuncDecl(new IdDecl(id), a, b); :} ;

arg = LEFTPARENTHESIS RIGHTPARENTHESIS {: return new Arg(); :} ;

block = LEFTBRACKET RIGHTBRACKET {: return new Block(); :} ;